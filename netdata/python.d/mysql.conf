# netdata python.d.plugin configuration for mysql
#
# This file is in YaML format. Generally the format is:
#
# name: value
#
# There are 2 sections:
#  - global variables
#  - one or more JOBS
#
# JOBS allow you to collect values from multiple sources.
# Each source will have its own set of charts.
#
# JOB parameters have to be indented (using spaces only, example below).

# ----------------------------------------------------------------------
# Global Variables
# These variables set the defaults for all JOBs, however each JOB
# may define its own, overriding the defaults.

# update_every sets the default data collection frequency.
# If unset, the python.d.plugin default is used.
# update_every: 1

# priority controls the order of charts at the netdata dashboard.
# Lower numbers move the charts towards the top of the page.
# If unset, the default for python.d.plugin is used.
# priority: 60000

# retries sets the number of retries to be made in case of failures.
# If unset, the default for python.d.plugin is used.
# Attempts to restore the service are made once every update_every
# and only if the module has collected values in the past.
# retries: 5

# ----------------------------------------------------------------------
# JOBS (data collection sources)
#
# The default JOBS share the same *name*. JOBS with the same name
# are mutually exclusive. Only one of them will be allowed running at
# any time. This allows autodetection to try several alternatives and
# pick the one that works.
#
# Any number of jobs is supported.
#
# All python.d.plugin JOBS (for all its modules) support a set of
# predefined parameters. These are:
#
# job_name:
#     name: myname     # the JOB's name as it will appear at the
#                      # dashboard (by default is the job_name)
#                      # JOBs sharing a name are mutually exclusive
#     update_every: 1  # the JOB's data collection frequency
#     priority: 60000  # the JOB's order on the dashboard
#     retries: 5       # the JOB's number of restoration attempts
#
# Additionally to the above, mysql also supports the following:
#
#     socket: 'path/to/mysql.sock'
#
#  or
#     host: 'IP or HOSTNAME' # the host to connect to
#     port: PORT             # the port to connect to
#
#  in all cases, the following can also be set:
#
#     user: 'username'       # the mysql username to use
#     pass: 'password'       # the mysql password to use
#

# ----------------------------------------------------------------------
# mySQL CONFIGURATION
#
# netdata does not need any privilege - only the ability to connect
# to the mysql server (netdata will not be able to see any data).
#
# Execute these commands to give the local user 'netdata' the ability
# to connect to the mysql server on localhost, without a password:
#
# > create user 'netdata'@'localhost';
# > grant usage on *.* to 'netdata'@'localhost' with grant option;
# > flush privileges;
#
# with the above statements, netdata will be able to gather mysql
# statistics, without the ability to see or alter any data or affect
# mysql operation in any way. No change is required below.

update_every  : 10
priority      : 10
retries       : 5

DATABASE:
name: 'Local'
user: 'netdata'
host: 'localhost'
port: '3306'

